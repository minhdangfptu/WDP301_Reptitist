import React, { useState, useEffect } from 'react';
import Header from '../components/Header';
import Footer from '../components/Footer';
import NavigationBar from '../components/NavigationBar';
import { useTheme } from '../context/ThemeContext';
import { useAuth } from '../context/AuthContext';
import { useNavigate, Link } from 'react-router-dom';
import '../css/Settings.css';
import '../css/dark-mode.css';

const Settings = () => {
  const { user } = useAuth();
  const navigate = useNavigate();
  const [emailNotifications, setEmailNotifications] = useState(true);
  const [systemNotifications, setSystemNotifications] = useState(false);
  const [selectedLanguage, setSelectedLanguage] = useState('vietnamese');
  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);
  const [isDataLoaded, setIsDataLoaded] = useState(false);
  const { darkMode, toggleDarkMode } = useTheme();

  useEffect(() => {
    if (user) {
      setIsDataLoaded(true);
    }
  }, [user]);

  const handleDeleteAccount = () => {
    setShowDeleteConfirm(true);
  };

  const confirmDelete = () => {
    // Logic x√≥a t√†i kho·∫£n
    console.log('Deleting account...');
    setShowDeleteConfirm(false);
  };

  const cancelDelete = () => {
    setShowDeleteConfirm(false);
  };

  const formatDate = () => {
    const today = new Date();
    const options = { 
      weekday: 'long', 
      year: 'numeric', 
      month: 'long', 
      day: 'numeric' 
    };
    return today.toLocaleDateString('vi-VN', options).toUpperCase();
  };

  const handleUpgradeClick = () => {
    navigate('/PlanUpgrade');
  };

  if (!user || !isDataLoaded) {
    return (
      <>
        <Header />
        <div className="profile-layout">
          <NavigationBar />
          <div className="profile-container">
            <div className="welcome-header">
              <div className="welcome-content">
                <h1>ƒêang t·∫£i th√¥ng tin...</h1>
                <p>Vui l√≤ng ƒë·ª£i trong gi√¢y l√°t</p>
              </div>
            </div>
          </div>
        </div>
        <Footer />
      </>
    );
  }

  return (
    <>
      <Header />
      <div className="profile-layout">
        <NavigationBar />
        
        <div className="profile-container">
          {/* Welcome Header */}
          <div className="welcome-header">
            <div className="welcome-content">
              <h1>Xin ch√†o, {user.fullname || user.username}</h1>
              <p>{formatDate()}</p>
            </div>
            <div className="welcome-emoji">
              üê¢
            </div>
          </div>

          {/* Profile Section */}
          <div className="profile-section">
            {/* Profile Header */}
            <div className="profile-header">
              <div className="profile-user-info">
                <div className="profile-avatar">
                  <img
                    src={user.user_imageurl || "/images/default-avatar.png"}
                    alt="Profile"
                    onError={(e) => {
                      e.target.onerror = null;
                      e.target.src = "/images/default-avatar.png";
                    }}
                  />
                </div>
                <div className="profile-user-details">
                  <h2>{user.username}</h2>
                  {user.account_type?.type === 'premium' ? (
                    <div className="profile-badge-container">
                      <span className="profile-badge-text">Premium Customer</span>
                    </div>
                  ) : (
                    <Link to="/PlanUpgrade" className="profile-badge-container">
                      <span className="profile-badge-text">Customer</span>
                      <span className="upgrade-button">Upgrade account</span>
                    </Link>
                  )}
                </div>
              </div>
            </div>

            {/* Settings Content */}
            <div className="settings-content">
              
              {/* C√†i ƒë·∫∑t th√¥ng b√°o */}
              <div className="settings-section">
                <h3 className="settings-section-title">C√†i ƒë·∫∑t th√¥ng b√°o</h3>
                <div className="settings-items">
                  <div className="settings-item">
                    <div className="settings-item-info">
                      <span className="settings-item-title">Nh·∫≠n th√¥ng b√°o email</span>
                      <span className="settings-item-description">Nh·∫≠n email v·ªÅ c·∫≠p nh·∫≠t t√†i kho·∫£n v√† khuy·∫øn m√£i</span>
                    </div>
                    <label className="toggle-switch">
                      <input
                        type="checkbox"
                        checked={emailNotifications}
                        onChange={(e) => setEmailNotifications(e.target.checked)}
                      />
                      <span className="toggle-slider"></span>
                    </label>
                  </div>

                  <div className="settings-item">
                    <div className="settings-item-info">
                      <span className="settings-item-title">Nh·∫≠n th√¥ng b√°o ƒë·∫©y t·ª´ h·ªá th·ªëng</span>
                      <span className="settings-item-description">Th√¥ng b√°o tr√™n tr√¨nh duy·ªát v·ªÅ ho·∫°t ƒë·ªông quan tr·ªçng</span>
                    </div>
                    <label className="toggle-switch">
                      <input
                        type="checkbox"
                        checked={systemNotifications}
                        onChange={(e) => setSystemNotifications(e.target.checked)}
                      />
                      <span className="toggle-slider"></span>
                    </label>
                  </div>
                </div>
              </div>

              {/* B·∫£o m·∫≠t */}
              <div className="settings-section">
                <h3 className="settings-section-title">B·∫£o m·∫≠t</h3>
                <div className="settings-items">
                  <div className="settings-item">
                    <div className="settings-item-info">
                      <span className="settings-item-title">ƒê·ªïi m·∫≠t kh·∫©u</span>
                      <span className="settings-item-description">C·∫≠p nh·∫≠t m·∫≠t kh·∫©u c·ªßa b·∫°n ƒë·ªÉ tƒÉng c∆∞·ªùng b·∫£o m·∫≠t</span>
                    </div>
                    <Link to="/Security" className="edit-button">
                      ƒê·ªïi m·∫≠t kh·∫©u
                    </Link>
                  </div>

                  <div className="settings-item">
                    <div className="settings-item-info">
                      <span className="settings-item-title">X√°c th·ª±c hai y·∫øu t·ªë</span>
                      <span className="settings-item-description">B·∫£o v·ªá t√†i kho·∫£n c·ªßa b·∫°n b·∫±ng x√°c th·ª±c hai y·∫øu t·ªë</span>
                    </div>
                    <label className="toggle-switch">
                      <input
                        type="checkbox"
                        checked={false}
                        onChange={() => {}}
                      />
                      <span className="toggle-slider"></span>
                    </label>
                  </div>

                  <div className="settings-item">
                    <div className="settings-item-info">
                      <span className="settings-item-title">Phi√™n ƒëƒÉng nh·∫≠p</span>
                      <span className="settings-item-description">Xem v√† qu·∫£n l√Ω c√°c thi·∫øt b·ªã ƒë√£ ƒëƒÉng nh·∫≠p</span>
                    </div>
                    <button className="edit-button">
                      Xem phi√™n
                    </button>
                  </div>
                </div>
              </div>

              {/* Giao d·ªãch */}
              <div className="settings-section">
                <h3 className="settings-section-title">Giao d·ªãch</h3>
                <div className="settings-items">
                  <div className="settings-item">
                    <div className="settings-item-info">
                      <span className="settings-item-title">L·ªãch s·ª≠ giao d·ªãch</span>
                      <span className="settings-item-description">Xem l·∫°i c√°c giao d·ªãch ƒë√£ th·ª±c hi·ªán</span>
                    </div>
                    <Link to="/Transaction" className="edit-button">
                      Xem l·ªãch s·ª≠
                    </Link>
                  </div>

                  <div className="settings-item">
                    <div className="settings-item-info">
                      <span className="settings-item-title">Ph∆∞∆°ng th·ª©c thanh to√°n</span>
                      <span className="settings-item-description">Qu·∫£n l√Ω c√°c ph∆∞∆°ng th·ª©c thanh to√°n ƒë√£ l∆∞u</span>
                    </div>
                    <button className="edit-button">
                      Qu·∫£n l√Ω
                    </button>
                  </div>

                  <div className="settings-item">
                    <div className="settings-item-info">
                      <span className="settings-item-title">Gi·ªõi h·∫°n giao d·ªãch</span>
                      <span className="settings-item-description">ƒê·∫∑t gi·ªõi h·∫°n cho c√°c giao d·ªãch c·ªßa b·∫°n</span>
                    </div>
                    <button className="edit-button">
                      C√†i ƒë·∫∑t
                    </button>
                  </div>
                </div>
              </div>

              {/* Ng√¥n ng·ªØ & giao di·ªán */}
              <div className="settings-section">
                <h3 className="settings-section-title">Ng√¥n ng·ªØ & giao di·ªán</h3>
                <div className="settings-items">
                  <div className="settings-item">
                    <div className="settings-item-info">
                      <span className="settings-item-title">L·ª±a ch·ªçn ng√¥n ng·ªØ</span>
                      <span className="settings-item-description">Thay ƒë·ªïi ng√¥n ng·ªØ hi·ªÉn th·ªã c·ªßa ·ª©ng d·ª•ng</span>
                    </div>
                    <select
                      className="settings-select"
                      value={selectedLanguage}
                      onChange={(e) => setSelectedLanguage(e.target.value)}
                    >
                      <option value="vietnamese">Ti·∫øng Vi·ªát</option>
                      <option value="english">English</option>
                      <option value="chinese">‰∏≠Êñá</option>
                      <option value="japanese">Êó•Êú¨Ë™û</option>
                    </select>
                  </div>

                  <div className="settings-item">
                    <div className="settings-item-info">
                      <span className="settings-item-title">Ch·∫ø ƒë·ªô s√°ng / t·ªëi (Dark mode)</span>
                      <span className="settings-item-description">B·∫≠t ch·∫ø ƒë·ªô t·ªëi ƒë·ªÉ b·∫£o v·ªá m·∫Øt khi s·ª≠ d·ª•ng ban ƒë√™m</span>
                    </div>
                    <label className="toggle-switch">
                      <input
                        type="checkbox"
                        checked={darkMode}
                        onChange={toggleDarkMode}
                      />
                      <span className="toggle-slider"></span>
                    </label>
                  </div>
                </div>
              </div>

              {/* X√≥a ho·∫∑c kh√≥a t√†i kho·∫£n */}
              <div className="settings-section danger-section">
                <h3 className="settings-section-title danger-title">X√≥a ho·∫∑c kh√≥a t√†i kho·∫£n</h3>
                <div className="settings-items">
                  <div className="settings-item danger-item">
                    <div className="settings-item-info">
                      <span className="settings-item-title danger-text">Y√™u c·∫ßu t·∫°m ng∆∞ng / x√≥a vƒ©nh vi·ªÖn t√†i kho·∫£n</span>
                      <span className="settings-item-description">H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c. T·∫•t c·∫£ d·ªØ li·ªáu s·∫Ω b·ªã x√≥a vƒ©nh vi·ªÖn.</span>
                    </div>
                    <button
                      className="delete-button"
                      onClick={handleDeleteAccount}
                    >
                      X√≥a t√†i kho·∫£n
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Delete Confirmation Modal */}
      {showDeleteConfirm && (
        <div className="modal-overlay">
          <div className="modal-content">
            <h3>X√°c nh·∫≠n x√≥a t√†i kho·∫£n</h3>
            <p>B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a t√†i kho·∫£n? H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c.</p>
            <div className="modal-buttons">
              <button className="cancel-button" onClick={cancelDelete}>
                H·ªßy b·ªè
              </button>
              <button className="confirm-delete-button" onClick={confirmDelete}>
                X√°c nh·∫≠n x√≥a
              </button>
            </div>
          </div>
        </div>
      )}

      <Footer />
    </>
  );
};

export default Settings;