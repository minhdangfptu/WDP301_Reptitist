import React, { useRef, useState, useEffect } from 'react';
import Header from "../components/Header";
import Footer from "../components/Footer";
import { toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import { useAuth } from '../context/AuthContext';

const ContactUs = () => {
  const form = useRef();
  const { user } = useAuth();
  const [loading, setLoading] = useState(false);
  const [formData, setFormData] = useState({
    user_name: '',
    user_email: '',
    user_phone: '',
    subject: '',
    message: ''
  });


  useEffect(() => {
    if (user) {
      setFormData(prev => ({
        ...prev,
        user_name: user.username || '',
        user_email: user.email || '',
        user_phone: user.phone_number || ''
      }));
    }
  }, [user]);

  // H√†m ki·ªÉm tra email h·ª£p l·ªá
  const isValidEmail = (email) => {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
  };

  // H√†m ki·ªÉm tra s·ªë ƒëi·ªán tho·∫°i h·ª£p l·ªá
  const isValidPhone = (phone) => {
    const phoneRegex = /^[0-9]{10}$/;
    return phoneRegex.test(phone);
  };

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    // Ki·ªÉm tra c√°c tr∆∞·ªùng b·∫Øt bu·ªôc
    if (!formData.user_name || !formData.user_email || !formData.user_phone || !formData.subject || !formData.message) {
      toast.error('Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin!', {
        position: "top-right",
        autoClose: 3000,
        hideProgressBar: false,
        closeOnClick: true,
        pauseOnHover: true,
        draggable: true,
      });
      return;
    }

    // Ki·ªÉm tra email h·ª£p l·ªá
    if (!isValidEmail(formData.user_email)) {
      toast.error('Email kh√¥ng h·ª£p l·ªá!', {
        position: "top-right",
        autoClose: 3000,
        hideProgressBar: false,
        closeOnClick: true,
        pauseOnHover: true,
        draggable: true,
      });
      return;
    }

    // Ki·ªÉm tra s·ªë ƒëi·ªán tho·∫°i h·ª£p l·ªá
    if (!isValidPhone(formData.user_phone)) {
      toast.error('S·ªë ƒëi·ªán tho·∫°i kh√¥ng h·ª£p l·ªá! Vui l√≤ng nh·∫≠p 10 ch·ªØ s·ªë.', {
        position: "top-right",
        autoClose: 3000,
        hideProgressBar: false,
        closeOnClick: true,
        pauseOnHover: true,
        draggable: true,
      });
      return;
    }

    setLoading(true);

    try {
      // T·∫°o n·ªôi dung email v·ªõi b·ªë c·ª•c ƒë·∫πp h∆°n
      const emailBody = `
===========================================
TH√îNG TIN LI√äN H·ªÜ - G√ìP √ù T·ªöI WEBSITE REPTITIST
===========================================

üë§ TH√îNG TIN NG∆Ø·ªúI G·ª¨I
----------------------
‚Ä¢ H·ªç v√† t√™n: ${formData.user_name}
‚Ä¢ Email: ${formData.user_email}
‚Ä¢ S·ªë ƒëi·ªán tho·∫°i: ${formData.user_phone}

üìù N·ªòI DUNG G√ìP √ù - PH·∫¢N H·ªíI
-------------------
${formData.message}

===========================================
Th·ªùi gian g·ª≠i: ${new Date().toLocaleString('vi-VN')}
===========================================
      `;

      // T·∫°o URL Gmail v·ªõi th√¥ng tin ƒë√£ ƒëi·ªÅn s·∫µn
      const gmailUrl = `https://mail.google.com/mail/?view=cm&fs=1&to=reptitist.service@gmail.com&su=${encodeURIComponent(`[REPTITIST - G√ìP √ù - PH·∫¢N H·ªíI] ${formData.subject}`)}&body=${encodeURIComponent(emailBody)}`;

      // M·ªü Gmail trong tab m·ªõi
      window.open(gmailUrl, '_blank');

      toast.success('ƒêang m·ªü Gmail...', {
        position: "top-right",
        autoClose: 3000,
        hideProgressBar: false,
        closeOnClick: true,
        pauseOnHover: true,
        draggable: true,
      });
      
      // Reset form
      setFormData({
        user_name: '',
        user_email: '',
        user_phone: '',
        subject: '',
        message: ''
      });
      
      // Reset form ref
      if (form.current) {
        form.current.reset();
      }
    } catch (error) {
      console.error('Error:', error);
      toast.error('C√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i sau.', {
        position: "top-right",
        autoClose: 5000,
        hideProgressBar: false,
        closeOnClick: true,
        pauseOnHover: true,
        draggable: true,
        progress: undefined,
      });
    } finally {
      setLoading(false);
    }
  };

  return (
    <>
      <Header />

      <div className="page-title">
        <div className="container">
          <h1>LI√äN H·ªÜ</h1>
        </div>
      </div>

      <section className="contact-section">
        <div className="container">
          <div className="contact-content">
            <div className="contact-info">
              <h2>Li√™n h·ªá v·ªõi ch√∫ng t√¥i</h2>
              <p>Ch√∫ng t√¥i lu√¥n s·∫µn s√†ng l·∫Øng nghe m·ªçi √Ω ki·∫øn ƒë√≥ng g√≥p c·ªßa b·∫°n ƒë·ªÉ ph√°t tri·ªÉn d·ªãch v·ª• ng√†y c√†ng t·ªët h∆°n.</p>
              <div className="social-icons">
                <a href="#" className="social-icon"><i className="fab fa-facebook-f"></i></a>
                <a href="#" className="social-icon"><i className="fab fa-instagram"></i></a>
                <a href="#" className="social-icon"><i className="fab fa-youtube"></i></a>
                <a href="#" className="social-icon"><i className="fab fa-tiktok"></i></a>
              </div>
            </div>
            <div className="contact-form">
              <form ref={form} onSubmit={handleSubmit}>
                <div className="form-group">
                  <input
                    type="text"
                    name="user_name"
                    className="form-control"
                    placeholder="T√™n c·ªßa b·∫°n"
                    value={formData.user_name}
                    onChange={handleChange}
                    required
                    readOnly={!!user}
                  />
                </div>
                <div className="form-group">
                  <input
                    type="email"
                    name="user_email"
                    className="form-control"
                    placeholder="Email"
                    value={formData.user_email}
                    onChange={handleChange}
                    required
                    readOnly={!!user}
                  />
                </div>
                <div className="form-group">
                  <input
                    type="tel"
                    name="user_phone"
                    className="form-control"
                    placeholder="S·ªë ƒëi·ªán tho·∫°i"
                    value={formData.user_phone}
                    onChange={handleChange}
                    required
                    readOnly={!!user}
                  />
                </div>
                <div className="form-group">
                  <input
                    type="text"
                    name="subject"
                    className="form-control"
                    placeholder="Ti√™u ƒë·ªÅ"
                    value={formData.subject}
                    onChange={handleChange}
                    required
                  />
                </div>
                <div className="form-group">
                  <textarea
                    name="message"
                    className="form-control"
                    placeholder="N·ªôi dung"
                    value={formData.message}
                    onChange={handleChange}
                    required
                  />
                </div>
                <button 
                  type="submit" 
                  className="btn-submit"
                  disabled={loading}
                >
                  {loading ? 'ƒêANG G·ª¨I...' : 'G·ª¨I √ù KI·∫æN'}
                </button>
              </form>
            </div>
          </div>
        </div>
      </section>

      <section className="map-section">
        <div className="container">
          <div className="map-container">
            <img src="map.png" alt="B·∫£n ƒë·ªì" />
            <div className="contact-cards">
              <div className="contact-card">
                <div className="card-icon"><i className="fas fa-map-marker-alt"></i></div>
                <div className="card-content">
                  <h3>ƒê·ªãa ch·ªâ c·ªßa t√¥i</h3>
                  <p>DELTA Building, FPT University, H√≤a L·∫°c, H√† N·ªôi</p>
                </div>
              </div>
              <div className="contact-card">
                <div className="card-icon"><i className="fas fa-phone-alt"></i></div>
                <div className="card-content">
                  <h3>S·ªë ƒëi·ªán tho·∫°i</h3>
                  <p>0987654321</p>
                </div>
              </div>
              <div className="contact-card">
                <div className="card-icon"><i className="fas fa-envelope"></i></div>
                <div className="card-content">
                  <h3>Email</h3>
                  <p>reptitist.service@gmail.com</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      <Footer />
    </>
  );
};

export default ContactUs;
